
package webservices;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ContactManager", targetNamespace = "http://WebServices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ContactManager {


    /**
     * 
     * @param macAddress
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLocation", targetNamespace = "http://WebServices/", className = "webservices.GetLocation")
    @ResponseWrapper(localName = "getLocationResponse", targetNamespace = "http://WebServices/", className = "webservices.GetLocationResponse")
    @Action(input = "http://WebServices/ContactManager/getLocationRequest", output = "http://WebServices/ContactManager/getLocationResponse")
    public String getLocation(
        @WebParam(name = "macAddress", targetNamespace = "")
        String macAddress);

    /**
     * 
     * @param macAddress
     * @param tokens
     * @param email
     * @return
     *     returns java.util.List<webservices.Messages>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMessage", targetNamespace = "http://WebServices/", className = "webservices.GetMessage")
    @ResponseWrapper(localName = "getMessageResponse", targetNamespace = "http://WebServices/", className = "webservices.GetMessageResponse")
    @Action(input = "http://WebServices/ContactManager/getMessageRequest", output = "http://WebServices/ContactManager/getMessageResponse")
    public List<Messages> getMessage(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "tokens", targetNamespace = "")
        List<String> tokens,
        @WebParam(name = "macAddress", targetNamespace = "")
        String macAddress);

    /**
     * 
     * @param owner
     * @param macAddress
     * @param message
     * @param coordenadas
     * @param token
     * @param status
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendMessage", targetNamespace = "http://WebServices/", className = "webservices.SendMessage")
    @ResponseWrapper(localName = "sendMessageResponse", targetNamespace = "http://WebServices/", className = "webservices.SendMessageResponse")
    @Action(input = "http://WebServices/ContactManager/sendMessageRequest", output = "http://WebServices/ContactManager/sendMessageResponse")
    public boolean sendMessage(
        @WebParam(name = "message", targetNamespace = "")
        String message,
        @WebParam(name = "coordenadas", targetNamespace = "")
        String coordenadas,
        @WebParam(name = "owner", targetNamespace = "")
        String owner,
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "status", targetNamespace = "")
        String status,
        @WebParam(name = "macAddress", targetNamespace = "")
        String macAddress);

    /**
     * 
     * @param curso
     * @param ip
     * @param nome
     * @param email
     * @return
     *     returns java.util.List<webservices.Presences>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getContactList", targetNamespace = "http://WebServices/", className = "webservices.GetContactList")
    @ResponseWrapper(localName = "getContactListResponse", targetNamespace = "http://WebServices/", className = "webservices.GetContactListResponse")
    @Action(input = "http://WebServices/ContactManager/getContactListRequest", output = "http://WebServices/ContactManager/getContactListResponse")
    public List<Presences> getContactList(
        @WebParam(name = "ip", targetNamespace = "")
        String ip,
        @WebParam(name = "nome", targetNamespace = "")
        String nome,
        @WebParam(name = "curso", targetNamespace = "")
        String curso,
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getIp", targetNamespace = "http://WebServices/", className = "webservices.GetIp")
    @ResponseWrapper(localName = "getIpResponse", targetNamespace = "http://WebServices/", className = "webservices.GetIpResponse")
    @Action(input = "http://WebServices/ContactManager/getIpRequest", output = "http://WebServices/ContactManager/getIpResponse")
    public String getIp(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
